version: '3'

services:
  db:
    image: postgres:14.3
    container_name: weather-database
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: 'weather'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      ADDITIONAL_POSTGRES_DBS: 'weather-test'
  rabbit-mq:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports:
      - 5672:5672
  data-analyzer:
    depends_on:
      - data-collector
    tty: true
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: data-analyzer
    command: gunicorn -b :5001 "backend.DataAnalyzer.main:create_app()"
    volumes:
      - ./backend/:/usr/src/app/backend
    ports:
      - '5001:5001'
    env_file:
      - ./.env.dev
  data-collector:
    restart: on-failure
    tty: true
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: data-collector
    command: gunicorn -b :5002 "backend.DataCollector.main:create_app()"
    volumes:
      - ./backend/:/usr/src/app/backend
    ports:
      - '5002:5002'
    environment:
      - CREATE_TABLES=True
    env_file:
      - ./.env.dev
  web-app:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: web-app
    command: gunicorn -b :5003 "web-app.main:create_app()"
    volumes:
      - ./web-app/:/usr/src/app/web-app
    ports:
      - '5003:5003'
    env_file:
      - ./.env.dev
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - default
    logging:
      driver: none
    volumes:
      - ./datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    ports:
      - "3000:3000"

volumes:
  postgres_data:
